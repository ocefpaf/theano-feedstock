{% set version = "1.0.2" %}

package:
  name: theano
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/T/Theano/Theano-{{ version }}.tar.gz
  sha256: 6768e003d328a17011e6fca9126fbb8a6ffd3bb13cb21c450f3e724cca29abde

build:
  number: 1
  script: python -m pip install --no-deps --ignore-installed .
  entry_points:
    - theano-nose = bin.theano_nose:main
    - theano-cache = bin.theano_cache:main

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python
    - setuptools
    - six >=1.9.0
    - numpy >=1.9.1
    - scipy >=0.14
    - pygpu >=0.7.0,<0.8

test:
  requires:
    - nose >=1.3.0
    - nose_parameterized >=0.5.0
  imports:
    - theano
    - theano.compile
    - theano.compile.sandbox
    - theano.compile.tests
    - theano.gof
    - theano.gof.tests
    - theano.gpuarray
    - theano.gpuarray.dnn
    - theano.gpuarray.linalg
    - theano.misc
    - theano.sandbox
    - theano.scalar
    - theano.scalar.tests
    - theano.sparse
    - theano.sparse.tests
    - theano.tensor
    - theano.tensor.nnet
    - theano.tensor.nnet.tests
    - theano.tensor.signal
    - theano.tensor.signal.tests
    - theano.tensor.tests
    - theano.tests
  commands:
    - theano-nose -h
    - theano-cache -h
    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]
    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]

about:
  home: http://deeplearning.net/software/theano/
  license: BSD 3-Clause
  summary: 'Optimizing compiler for evaluating mathematical expressions on CPUs and GPUs.'
  license_file: LICENSE.txt

extra:
  recipe-maintainers:
    - abergeron
    - jakirkham
    - ocefpaf
    - ericmjl
